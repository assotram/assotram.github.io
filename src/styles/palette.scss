$palettes: (
  'light': #fff,
  'dark': hsl(300, 90%, 10%),
  'pink': (
    100: hsl(300, 90%, 90%),
    300: hsl(300, 90%, 70%),
    500: hsl(300, 90%, 50%),
    700: hsl(300, 90%, 30%),
    900: hsl(300, 90%, 10%),
  ),
  'blue': (
    100: hsl(180, 90%, 90%),
    300: hsl(180, 90%, 70%),
    500: hsl(180, 90%, 50%),
    700: hsl(180, 90%, 30%),
    900: hsl(180, 90%, 10%),
  ),
);

@function get($key, $num: null, $map: $palettes) {
  @if map-has-key($map, $key) {
    $palette: map-get($map, $key);

    @if $key == 'dark' or $key == 'light' {
      @return $palette;
    } @else {
      @if map-has-key($palette, $num) {
        @return map-get($palette, $num);
      }
    }

    @error '$num: #{$num} not exists in $palette: #{$key}!';
  }

  @error '$palette: #{$key} not found!';
}

@mixin init() {
  $styles: (
    'bg': background-color,
    'color': color,
    'border': border-color,
    'fill': fill,
    'stroke': stroke,
  );

  @each $style-name, $style in $styles {
    .#{$style-name} {
      @each $palette-name, $palette in $palettes {
        @if $palette-name == 'light' or $palette-name == 'dark' {
          &-#{$palette-name} { #{$style}: $palette; }
        } @else {
          @each $num, $color in $palette {
            &-#{$palette-name}-#{$num} {
              #{$style}: $color;
            }
          }
        }
      }
    }
  }
}

@mixin gradient($num) {
  background: linear-gradient(
    90deg,
    get('blue', $num),
    get('pink', $num),
  );
}
